{"version":3,"sources":["components/NoteInput.js","components/NumberInput.js","components/Cell.js","components/Board.js","components/DifficultySelector.js","components/EditNotesSwitch.js","components/ShowAllNotesSwitch.js","App.js","index.js"],"names":["NoteInput","handleNoteChange","e","toggledValue","key","isNumber","isNaN","parseInt","props","row","col","this","isFocus","document","addEventListener","removeEventListener","noteElements","Array","apply","map","_","idx","val","notes","has","toString","className","onKeyDown","Component","NumberInput","autoFocus","minLength","maxLength","onChange","handleInputChange","type","value","Cell","handleCellClick","NanoBus","emit","rowIndex","colIndex","newCellValue","target","handleCellChange","state","showInput","highlightCell","on","data","setState","showAllNotes","editNotesMode","locked","cellClassnames","onClick","Board","fetchGameBoard","gameURL","level","fetch","then","res","json","gameboard","updatedGameboard","board","cellValue","Set","catch","err","console","log","newValue","currentBoard","selectedRow","currentCellData","updatedCellData","currentNoteData","delete","add","prevProps","gridBoard","gridItems","rowIdx","cellItems","cellData","loadGrid","DifficultySelector","handleChange","EditNotesSwitch","checked","ShowAllNotesSwitch","nanobus","App","handleDifficultyChange","handleEditNotes","handleShowAllNotes","selectedCell","undefined","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a737b79.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./NoteInput.css\";\n\nclass NoteInput extends Component {\n\n  componentDidMount(){\n    if( this.props.isFocus ){\n      document.addEventListener(\"keydown\", this.handleNoteChange);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleNoteChange);\n  }\n\n  handleNoteChange = (e) => {\n    let toggledValue = e.key;\n    let isNumber = !isNaN(parseInt(e.key));\n    const {row, col} = this.props;\n    if( isNumber ){\n      this.props.handleNoteChange(row, col, toggledValue)\n    }\n  }\n\n  render() { \n\n    let noteElements = Array.apply(null, Array(9)).map((_, idx) => {\n      let val = idx + 1;\n      if( this.props.notes.has(val.toString()) ){\n        return <div key={val} className=\"NoteInput-circle NoteInput-circle-filled\">{val.toString()}</div>\n      } else {\n        return <div key={val} className=\"NoteInput-circle\">{val.toString()}</div>\n      }\n    });\n\n    return (\n      <div className=\"NoteInput-container\" onKeyDown={this.handleNoteChange}>\n        {noteElements}\n      </div>\n    );\n  }\n}\n \nexport default NoteInput;","import React, { Component } from 'react'\nimport './Cell.css';\n\nclass NumberInput extends Component {\n  render() { \n    return (\n      <input \n        autoFocus\n        className=\"Cell-input\" \n        minLength={0}\n        maxLength={1}\n        onChange={this.props.handleInputChange}\n        type=\"text\" \n        value={this.props.value === 0 ? \"\" : this.props.value} \n      ></input>\n    );\n  }\n}\n \nexport default NumberInput;","import React, { Component } from 'react'\nimport \"./Cell.css\";\nimport { NanoBus } from '../App.js';\nimport NoteInput from './NoteInput.js';\nimport NumberInput from './NumberInput.js';\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showInput: false,\n      highlightCell: false,\n      isFocus: false,\n    }\n  }\n\n  componentDidMount(){\n    NanoBus.on(\"cell-click\", (data) => {\n      //1. Set focus of current selected cell\n      const { col, row } = data;\n      if( col.toString() === this.props.colIndex.toString() && row.toString() === this.props.rowIndex.toString() ){\n        this.setState({ isFocus: true });\n      } else if ( this.state.isFocus ){\n        this.setState({ isFocus: false });\n      }\n\n      //2. Highlight all other matching cells\n      if( this.props.value > 0 && this.props.value.toString() === data.value.toString()) {\n        this.setState({ highlightCell: true });\n      } else if( this.state.highlightCell ) {\n        this.setState({ highlightCell: false });\n      }\n    });\n  }\n\n  handleCellClick = () => {\n    NanoBus.emit(\"cell-click\", {\n      value: this.props.value,\n      row: this.props.rowIndex,\n      col: this.props.colIndex\n    });\n  }\n\n  handleInputChange = (e) =>  {\n    const { rowIndex, colIndex } = this.props;\n    let newCellValue = e.target.value;\n    this.props.handleCellChange(rowIndex, colIndex, newCellValue);\n  }\n\n  render() {\n\n    const { showAllNotes, editNotesMode, locked } = this.props;\n    const cellClassnames = \"Cell-container \" + \n      (locked ? \"Cell-container-locked \" : \"\") + \n      (this.state.isFocus ? \"Cell-container-focus \" : \"\") + \n      (this.state.highlightCell ? \"Cell-container-highlight \" : \"\");\n\n    if( locked ){\n      return (\n        <div className={cellClassnames} onClick={this.handleCellClick}>\n          <div className=\"Cell-value\">{this.props.value}</div>\n        </div>\n      );\n    } else if ( !locked && this.props.value > 0 ){\n      return (\n        <div className={cellClassnames} onClick={this.handleCellClick}>\n          <NumberInput handleInputChange={this.handleInputChange} value={this.props.value} />\n        </div>\n      );\n    }\n\n    return (\n      <div className={cellClassnames} onClick={this.handleCellClick}>\n        {showAllNotes \n          ? <NoteInput isFocus={this.state.isFocus} row={this.props.rowIndex} col={this.props.colIndex} notes={this.props.notes} editNotesMode={editNotesMode} handleNoteChange={this.props.handleNoteChange} /> \n          : <NumberInput handleInputChange={this.handleInputChange} value={this.props.value} /> }\n      </div>\n    );\n  }\n}\n \nexport default Cell;","import React, { Component } from 'react';\nimport Cell from \"./Cell.js\";\nimport \"./Board.css\";\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [],\n    }\n  }\n\n  componentDidMount(){\n    this.fetchGameBoard();\n  }\n\n  componentDidUpdate(prevProps){\n    if( prevProps.level !== this.props.level ){\n      this.fetchGameBoard();\n    }\n  }\n\n  fetchGameBoard = () => {\n    let gameURL = \"https://sugoku.herokuapp.com/board?difficulty=\" + this.props.level;\n    fetch(gameURL)\n      .then((res) => res.json())\n      .then((gameboard) => {\n\n        let boardData = gameboard.board;\n        let updatedGameboard = boardData.map((row, rowIndex) => {\n          return row.map((cellValue, colIndex) => {\n            return { row: rowIndex, col: colIndex, value: cellValue, locked: cellValue !== 0, notes: new Set()}\n          });\n        });\n        this.setState({ board: updatedGameboard });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  }\n\n  handleCellChange = (rowIndex, colIndex, newValue) => {\n    let currentBoard = this.state.board;\n    let selectedRow = currentBoard[rowIndex];\n    let currentCellData = selectedRow[colIndex];\n    let updatedCellData = {...currentCellData, value: newValue};\n    selectedRow[colIndex] = updatedCellData\n    currentBoard[rowIndex] = selectedRow;\n    this.setState({ board: currentBoard });\n  }\n\n  handleNoteChange = (rowIndex, colIndex, newValue ) => {\n    let currentBoard = this.state.board;\n    let selectedRow = currentBoard[rowIndex];\n    let currentCellData = selectedRow[colIndex];\n    let currentNoteData = currentCellData[\"notes\"];\n    if( currentNoteData.has(newValue.toString()) ){\n      currentNoteData.delete(newValue.toString())\n    } else {\n      currentNoteData.add(newValue.toString());\n    }\n\n    currentCellData[\"notes\"] = currentNoteData;\n    selectedRow[colIndex] = currentCellData;\n    currentBoard[rowIndex] = selectedRow;\n    this.setState({ board: currentBoard });\n  }\n\n  render() { \n\n    const loadGrid = () => {\n      let gridItems = this.state.board.map((row, rowIdx) => {\n        let cellItems = row.map((cellData) => {\n          const { row, col, value, locked, notes } = cellData;\n          return <Cell \n                    notes={notes}\n                    rowIndex={row}\n                    colIndex={col}\n                    locked={locked}\n                    value={value} \n                    key={\"cell-\" + row + \"-\" + col} \n                    handleCellChange={this.handleCellChange} \n                    handleNoteChange={this.handleNoteChange}\n                    editNotesMode={this.props.editNotesMode}\n                    showAllNotes={this.props.showAllNotes}\n                    />\n        });\n        return <div className=\"Board-row\" key={\"row-\" + rowIdx}>{cellItems}</div>\n      });\n      return <div className=\"Board-container\">{gridItems}</div>\n    }\n    let gridBoard = loadGrid();\n    return (\n      <div className=\"Board-grid\">{gridBoard}</div>\n    );\n  }\n}\n \nexport default Board;","import React, { Component } from 'react'\nimport \"./DifficultySelector.css\";\n\nclass DifficultySelector extends Component {\n  \n  render() { \n    return (\n      <div className=\"DifficultySelector-container\">\n        <p className=\"DifficultySelector-title\">Select Game Difficulty: </p>\n        <select onChange={this.props.handleChange}>\n          <option value={\"easy\"}>Easy</option>\n          <option value={\"medium\"}>Medium</option>\n          <option value={\"hard\"}>Hard</option>\n        </select>\n      </div>\n    );\n  }\n}\n \nexport default DifficultySelector;","import React, { Component } from 'react';\nimport Switch from 'react-switch';\nimport \"./Switch.css\";\n\nclass EditNotesSwitch extends Component {\n\n  render() { \n    return (\n      <label className=\"Switch-row\">\n        <span className=\"Switch-text\">Edit Cell Notes:</span>\n        <Switch onChange={this.props.handleChange} checked={this.props.checked} />\n      </label>\n    );\n  }\n}\n \nexport default EditNotesSwitch;","import React, { Component } from 'react';\nimport Switch from 'react-switch';\nimport \"./Switch.css\";\n\nclass ShowAllNotesSwitch extends Component {\n\n  render() { \n    return (\n        <label className=\"Switch-row\">\n          <span className=\"Switch-text\">Show All Notes: </span>\n          <Switch onChange={this.props.handleChange} checked={this.props.checked} />\n        </label>\n    );\n  }\n}\n \nexport default ShowAllNotesSwitch;","import './App.css';\nimport Board from './components/Board';\nimport DifficultySelector from './components/DifficultySelector';\nimport EditNotesSwitch from './components/EditNotesSwitch.js';\nimport React, { Component } from 'react';\nimport nanobus from 'nanobus';\nimport ShowAllNotesSwitch from './components/ShowAllNotesSwitch';\n\nexport const NanoBus = nanobus();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      level: \"easy\",\n      selectedCell: undefined,\n      editNotesMode: false,\n      showAllNotes: false,\n    };\n  }\n\n  componentDidMount(){\n\n    document.addEventListener(\"keydown\", (e) => {\n      if( e.key === \"Shift\"){\n        this.setState({ showAllNotes: !this.state.showAllNotes });\n      }\n    })\n\n    NanoBus.on(\"cell-click\", data => {\n      this.setState({ selectedCell: data });\n    })\n  }\n\n  handleDifficultyChange = (e) => {\n    this.setState({ level: e.target.value });\n  }\n\n  handleEditNotes = () => {\n    this.setState({ editNotesMode: !this.state.editNotesMode });\n  }\n\n  handleShowAllNotes = () => {\n    this.setState({ showAllNotes: !this.state.showAllNotes });\n  }\n\n  render() { \n    return (\n      <div className=\"App-container\">\n        <h1 className=\"App-title\">Sudoku Board</h1>\n        <div className=\"App-button-row\">\n          <DifficultySelector handleChange={this.handleDifficultyChange} />\n        </div>\n        <Board level={this.state.level} editNotesMode={this.state.editNotesMode} showAllNotes={this.state.showAllNotes} />\n        <div className=\"App-footer\">\n          <EditNotesSwitch checked={this.state.editNotesMode} handleChange={this.handleEditNotes} />\n          <ShowAllNotesSwitch checked={this.state.showAllNotes} handleChange={this.handleShowAllNotes} />\n        </div>\n      </div>\n    );\n  }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}