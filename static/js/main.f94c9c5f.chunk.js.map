{"version":3,"sources":["components/NoteInput.js","components/CellInput.js","components/Cell.js","components/Board.js","components/DifficultySelector.js","components/EditNotesSwitch.js","components/ProgressBar.js","App.js","index.js"],"names":["NoteInput","handleNoteChange","e","props","id","focus","toggledValue","key","isNumber","isNaN","parseInt","row","col","this","document","addEventListener","removeEventListener","noteElements","Array","apply","map","_","idx","val","notes","has","toString","className","onKeyDown","Component","CellInput","state","editNotesMode","value","size","onChange","handleInputChange","type","Cell","handleCellClick","onCellClick","NanoBus","emit","rowIndex","colIndex","newCellValue","target","handleCellChange","showInput","highlightCell","on","data","setState","locked","cellClassnames","onClick","Board","updateFocus","cellID","fetchGameBoard","gameURL","level","fetch","then","res","json","gameboard","updatedGameboard","board","cellValue","Set","catch","err","console","log","newValue","currentBoard","selectedRow","currentCellData","updatedValue","slice","updatedCellData","currentNoteData","delete","add","undefined","prevProps","gridBoard","gridItems","rowIdx","cellItems","cellData","showAllNotes","loadGrid","DifficultySelector","handleChange","EditNotesSwitch","checked","ProgressBar","nanobus","App","handleDifficultyChange","handleEditNotes","selectedCell","ReactDOM","render","StrictMode","getElementById"],"mappings":"4YA4CeA,E,4MA7BbC,iBAAmB,SAACC,GAClB,GAAG,EAAKC,MAAMC,KAAO,EAAKD,MAAME,MAAM,CACpC,IAAIC,EAAeJ,EAAEK,IACjBC,GAAYC,MAAMC,SAASR,EAAEK,MACjC,EAAmB,EAAKJ,MAAjBQ,EAAP,EAAOA,IAAKC,EAAZ,EAAYA,IACRJ,GACF,EAAKL,MAAMF,iBAAiBU,EAAKC,EAAKN,K,uDAhB5C,WACMO,KAAKV,MAAME,QAAUQ,KAAKV,MAAMC,IAClCU,SAASC,iBAAiB,UAAWF,KAAKZ,oB,kCAI9C,WACEa,SAASE,oBAAoB,UAAWH,KAAKZ,oB,oBAc/C,WAAU,IAAD,OACHgB,EAAeC,MAAMC,MAAM,KAAMD,MAAM,IAAIE,KAAI,SAACC,EAAGC,GACrD,IAAIC,EAAMD,EAAM,EAChB,OAAI,EAAKnB,MAAMqB,MAAMC,IAAIF,EAAIG,YACpB,qBAAeC,UAAU,2CAAzB,SAAqEJ,EAAIG,YAA/DH,GAEV,qBAAeI,UAAU,2CAAzB,SAAqEJ,EAAIG,YAA/DH,MAIrB,OACE,qBAAKI,UAAU,sBAAsBC,UAAWf,KAAKZ,iBAArD,SACGgB,Q,GAnCeY,aCwBTC,E,kDAvBb,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IACD4B,MAAQ,GAFI,E,0CAKnB,WACE,MAAqClB,KAAKV,MAAlCC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,MAAO2B,EAAnB,EAAmBA,cAEnB,OAAK5B,IAAOC,GAAS2B,GAAwC,IAArBnB,KAAKV,MAAM8B,OAAeD,GAA6C,IAA1BnB,KAAKV,MAAMqB,MAAMU,KAC7F,cAAC,EAAD,aAAW9B,GAAIA,EAAIC,MAAOA,GAAWQ,KAAKV,QAIjD,uBACEwB,UAAU,aACVQ,SAAUtB,KAAKV,MAAMiC,kBACrBC,KAAK,OACLJ,MAA4B,IAArBpB,KAAKV,MAAM8B,MAAc,GAAKpB,KAAKV,MAAM8B,Y,GAlBhCJ,aC0ETS,E,kDAvEb,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IAsBRoC,gBAAkB,WAChB,EAAKpC,MAAMqC,YAAY,EAAKrC,MAAMC,IAClCqC,EAAQC,KAAK,aAAc,CACzBT,MAAO,EAAK9B,MAAM8B,MAClBtB,IAAK,EAAKR,MAAMwC,SAChB/B,IAAK,EAAKT,MAAMyC,YA5BD,EAgCnBR,kBAAoB,SAAClC,GACnB,MAA+B,EAAKC,MAA5BwC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SACdC,EAAe3C,EAAE4C,OAAOb,MAC5B,EAAK9B,MAAM4C,iBAAiBJ,EAAUC,EAAUC,IAjChD,EAAKd,MAAQ,CACXiB,WAAW,EACXC,eAAe,GAJA,E,qDAQnB,WAAoB,IAAD,OACjBR,EAAQS,GAAG,cAAc,SAACC,GAEpB,EAAKhD,MAAM8B,MAAQ,GAAK,EAAK9B,MAAM8B,MAAMP,aAAeyB,EAAKlB,MAAMP,WACrE,EAAK0B,SAAS,CAAEH,eAAe,IACtB,EAAKlB,MAAMkB,eACpB,EAAKG,SAAS,CAAEH,eAAe,OAInCR,EAAQS,GAAG,eAAe,WACxB,EAAKE,SAAS,CAAEH,eAAe,S,oBAmBnC,WAEE,MAA6CpC,KAAKV,MAA1C6B,EAAR,EAAQA,cAAeqB,EAAvB,EAAuBA,OACjBC,EAAiB,mBACpBD,EAAS,yBAA2B,KAFvC,EAA+BhD,QAA/B,EAAsCD,GAGpB,wBAA0B,KACzCS,KAAKkB,MAAMkB,cAAgB,4BAA8B,IAE5D,OAAII,EAEA,qBAAK1B,UAAW2B,EAAgBC,QAAS1C,KAAK0B,gBAA9C,SACE,qBAAKZ,UAAU,aAAf,SAA6Bd,KAAKV,MAAM8B,UAM5C,qBAAKN,UAAW2B,EAAgBC,QAAS1C,KAAK0B,gBAA9C,SACE,cAAC,EAAD,CACEnC,GAAIS,KAAKV,MAAMC,GACfO,IAAKE,KAAKV,MAAMwC,SAChB/B,IAAKC,KAAKV,MAAMyC,SAChBvC,MAAOQ,KAAKV,MAAME,MAClBmB,MAAOX,KAAKV,MAAMqB,MAClBQ,cAAeA,EACf/B,iBAAkBY,KAAKV,MAAMF,iBAC7BgC,MAAOpB,KAAKV,MAAM8B,MAClBG,kBAAmBvB,KAAKuB,0B,GAlEfP,aCsHJ2B,G,wDArHb,WAAYrD,GAAQ,IAAD,8BACjB,cAAMA,IAmBRsD,YAAc,SAACC,GACb,EAAKN,SAAS,CAAE/C,MAAOqD,KArBN,EAwBnBC,eAAiB,WACf,IAAIC,EAAU,iDAAmD,EAAKzD,MAAM0D,MAC5EC,MAAMF,GACHG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACL,IACIC,EADYD,EAAUE,MACOhD,KAAI,SAACT,EAAKgC,GACzC,OAAOhC,EAAIS,KAAI,SAACiD,EAAWzB,GACzB,MAAO,CAAEjC,IAAKgC,EAAU/B,IAAKgC,EAAUX,MAAOoC,EAAWhB,OAAsB,IAAdgB,EAAiB7C,MAAO,IAAI8C,WAGjG,EAAKlB,SAAS,CAAEgB,MAAOD,OAExBI,OAAM,SAACC,GACNC,QAAQC,IAAI,MAAOF,OAtCN,EA0CnBzB,iBAAmB,SAACJ,EAAUC,EAAU+B,GACtC,IAAIC,EAAe,EAAK7C,MAAMqC,MAC1BS,EAAcD,EAAajC,GAC3BmC,EAAkBD,EAAYjC,GAC9BmC,EAAe,EAEjBA,EAD+B,IAA7BD,EAAe,MACFH,EAEAA,EAASjD,WAAWsD,OAAO,GAG5CvC,EAAQC,KAAK,aAAc,CACzBT,MAAO8C,EACPpE,IAAKgC,EACL/B,IAAKgC,IAGP,IAAIqC,EAAe,2BAAOH,GAAP,IAAwB7C,MAAO8C,IAClDF,EAAYjC,GAAYqC,EACxBL,EAAajC,GAAYkC,EACzB,EAAKzB,SAAS,CAAEgB,MAAOQ,KA9DN,EAiEnB3E,iBAAmB,SAAC0C,EAAUC,EAAU+B,GACtC,IAAIC,EAAe,EAAK7C,MAAMqC,MAC1BS,EAAcD,EAAajC,GAC3BmC,EAAkBD,EAAYjC,GAC9BsC,EAAkBJ,EAAe,MACjCI,EAAgBzD,IAAIkD,EAASjD,YAC/BwD,EAAgBC,OAAOR,EAASjD,YAEhCwD,EAAgBE,IAAIT,EAASjD,YAG/BoD,EAAe,MAAYI,EAC3BL,EAAYjC,GAAYkC,EACxBF,EAAajC,GAAYkC,EACzB,EAAKzB,SAAS,CAAEgB,MAAOQ,KA7EvB,EAAK7C,MAAQ,CACXqC,MAAO,GACP/D,WAAOgF,GAJQ,E,qDAQnB,WACExE,KAAK8C,mB,gCAGP,SAAmB2B,GACbA,EAAUzB,QAAUhD,KAAKV,MAAM0D,QACjChD,KAAK8C,iBACLlB,EAAQC,KAAK,eACb7B,KAAKuC,SAAS,CAAE/C,WAAOgF,O,oBAkE3B,WAAU,IAAD,OA0BHE,EAxBa,WACf,IAAIC,EAAY,EAAKzD,MAAMqC,MAAMhD,KAAI,SAACT,EAAK8E,GACzC,IAAIC,EAAY/E,EAAIS,KAAI,SAACuE,GACvB,IAAQhF,EAAmCgF,EAAnChF,IAAKC,EAA8B+E,EAA9B/E,IAAKqB,EAAyB0D,EAAzB1D,MAAOoB,EAAkBsC,EAAlBtC,OAAQ7B,EAAUmE,EAAVnE,MACjC,OAAO,cAAC,EAAD,CACGA,MAAOA,EACPmB,SAAUhC,EACViC,SAAUhC,EACVyC,OAAQA,EACRpB,MAAOA,EAEP7B,GAAI,QAAUO,EAAM,IAAMC,EAC1BP,MAAO,EAAK0B,MAAM1B,MAClBmC,YAAa,EAAKiB,YAClBV,iBAAkB,EAAKA,iBACvB9C,iBAAkB,EAAKA,iBACvB+B,cAAe,EAAK7B,MAAM6B,cAC1B4D,aAAc,EAAKzF,MAAMyF,cAPpB,QAAUjF,EAAM,IAAMC,MAUvC,OAAO,qBAAKe,UAAU,YAAf,SAAkD+D,GAAlB,OAASD,MAElD,OAAO,qBAAK9D,UAAU,kBAAf,SAAkC6D,IAE3BK,GAChB,OACE,mCACE,qBAAKlE,UAAU,aAAf,SAA6B4D,U,GAhHjB1D,cCcLiE,G,kKAdb,WACE,OACE,sBAAKnE,UAAU,+BAAf,UACE,mBAAGA,UAAU,2BAAb,sCACA,yBAAQQ,SAAUtB,KAAKV,MAAM4F,aAA7B,UACE,wBAAQ9D,MAAO,OAAf,kBACA,wBAAQA,MAAO,SAAf,oBACA,wBAAQA,MAAO,OAAf,4B,GATuBJ,c,iBCalBmE,G,kKAVb,WACE,OACE,wBAAOrE,UAAU,aAAjB,UACE,sBAAMA,UAAU,cAAhB,8BACA,cAAC,IAAD,CAAQQ,SAAUtB,KAAKV,MAAM4F,aAAcE,QAASpF,KAAKV,MAAM8F,iB,GANzCpE,c,iBCqBfqE,G,wDArBb,WAAY/F,GAAQ,IAAD,8BACjB,cAAMA,IACD4B,MAAQ,GAFI,E,0CAInB,WACE,OACE,sBAAKJ,UAAU,wBAAf,UACE,qBAAKA,UAAU,mBAAf,eACA,qBAAKA,UAAU,mBAAf,eACA,qBAAKA,UAAU,mBAAf,eACA,qBAAKA,UAAU,mBAAf,eACA,qBAAKA,UAAU,mBAAf,eACA,qBAAKA,UAAU,mBAAf,eACA,qBAAKA,UAAU,mBAAf,eACA,qBAAKA,UAAU,mBAAf,eACA,qBAAKA,UAAU,mBAAf,sB,GAhBkBE,cCKbY,EAAU0D,MAgDRC,E,kDA7Cb,WAAYjG,GAAQ,IAAD,8BACjB,cAAMA,IAqBRkG,uBAAyB,SAACnG,GACxB,EAAKkD,SAAS,CAAES,MAAO3D,EAAE4C,OAAOb,SAvBf,EA0BnBqE,gBAAkB,WAChB,EAAKlD,SAAS,CAAEpB,eAAgB,EAAKD,MAAMC,iBAzB3C,EAAKD,MAAO,CACV8B,MAAO,OACP0C,kBAAclB,EACdrD,eAAe,GALA,E,qDASnB,WAAoB,IAAD,OAEjBlB,SAASC,iBAAiB,WAAW,SAACb,GACvB,UAAVA,EAAEK,KACH,EAAK6C,SAAS,CAAEpB,eAAgB,EAAKD,MAAMC,mBAI/CS,EAAQS,GAAG,cAAc,SAAAC,GACvB,EAAKC,SAAS,CAAEmD,aAAcpD,S,oBAYlC,WACE,OACE,sBAAKxB,UAAU,gBAAf,UACE,oBAAIA,UAAU,YAAd,0BACA,sBAAKA,UAAU,iBAAf,UACE,cAAC,EAAD,CAAoBoE,aAAclF,KAAKwF,yBACvC,cAAC,EAAD,CAAiBJ,QAASpF,KAAKkB,MAAMC,cAAe+D,aAAclF,KAAKyF,qBAEzE,cAAC,EAAD,CAAOzC,MAAOhD,KAAKkB,MAAM8B,MAAO7B,cAAenB,KAAKkB,MAAMC,gBAC1D,cAAC,EAAD,W,GAxCUH,aCLlB2E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF5F,SAAS6F,eAAe,W","file":"static/js/main.f94c9c5f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"./NoteInput.css\";\n\nclass NoteInput extends Component {\n\n  componentDidMount(){\n    if( this.props.focus === this.props.id ){\n      document.addEventListener(\"keydown\", this.handleNoteChange);\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleNoteChange);\n  }\n\n  handleNoteChange = (e) => {\n    if(this.props.id === this.props.focus){\n      let toggledValue = e.key;\n      let isNumber = !isNaN(parseInt(e.key));\n      const {row, col} = this.props;\n      if( isNumber ){\n        this.props.handleNoteChange(row, col, toggledValue)\n      }\n    }\n  }\n\n  render() { \n    let noteElements = Array.apply(null, Array(9)).map((_, idx) => {\n      let val = idx + 1;\n      if( this.props.notes.has(val.toString()) ){\n        return <div key={val} className=\"NoteInput-circle NoteInput-circle-filled\">{val.toString()}</div>\n      } else {\n        return <div key={val} className=\"NoteInput-circle NoteInput-circle-hidden\">{val.toString()}</div>\n      }\n    });\n\n    return (\n      <div className=\"NoteInput-container\" onKeyDown={this.handleNoteChange}>\n        {noteElements}\n      </div>\n    );\n  }\n}\n \nexport default NoteInput;","import React, { Component } from 'react';\nimport NoteInput from './NoteInput.js';\n\nclass CellInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n\n  render() { \n    const { id, focus, editNotesMode } = this.props;\n\n    if( (id === focus && editNotesMode) || (this.props.value === 0 && editNotesMode) || (this.props.notes.size !== 0) ){\n      return <NoteInput id={id} focus={focus} {...this.props} />;\n    }\n\n    return (\n      <input \n        className=\"Cell-input\" \n        onChange={this.props.handleInputChange}\n        type=\"text\" \n        value={this.props.value === 0 ? \"\" : this.props.value} \n      ></input>\n    );\n  }\n}\n \nexport default CellInput;","import React, { Component } from 'react'\nimport \"./Cell.css\";\nimport { NanoBus } from '../App.js';\nimport CellInput from './CellInput.js';\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showInput: false,\n      highlightCell: false,\n    }\n  }\n\n  componentDidMount(){\n    NanoBus.on(\"cell-click\", (data) => {\n      //Highlight all other matching cells\n      if( this.props.value > 0 && this.props.value.toString() === data.value.toString()) {\n        this.setState({ highlightCell: true });\n      } else if( this.state.highlightCell ) {\n        this.setState({ highlightCell: false });\n      }\n    });\n\n    NanoBus.on(\"board-reset\", () => {\n      this.setState({ highlightCell: false });\n    });\n  }\n\n  handleCellClick = () => {\n    this.props.onCellClick(this.props.id)\n    NanoBus.emit(\"cell-click\", {\n      value: this.props.value,\n      row: this.props.rowIndex,\n      col: this.props.colIndex\n    });\n  }\n\n  handleInputChange = (e) =>  {\n    const { rowIndex, colIndex } = this.props;\n    let newCellValue = e.target.value;\n    this.props.handleCellChange(rowIndex, colIndex, newCellValue);\n  }\n\n  render() {\n\n    const { editNotesMode, locked, focus, id } = this.props;\n    const cellClassnames = \"Cell-container \" + \n      (locked ? \"Cell-container-locked \" : \"\") + \n      (focus === id ? \"Cell-container-focus \" : \"\") + \n      (this.state.highlightCell ? \"Cell-container-highlight \" : \"\");\n\n    if( locked ){\n      return (\n        <div className={cellClassnames} onClick={this.handleCellClick}>\n          <div className=\"Cell-value\">{this.props.value}</div>\n        </div>\n      );\n    } \n\n    return (\n      <div className={cellClassnames} onClick={this.handleCellClick}>\n        <CellInput \n          id={this.props.id}\n          row={this.props.rowIndex} \n          col={this.props.colIndex} \n          focus={this.props.focus} \n          notes={this.props.notes} \n          editNotesMode={editNotesMode} \n          handleNoteChange={this.props.handleNoteChange} \n          value={this.props.value}\n          handleInputChange={this.handleInputChange}  />\n      </div>\n    );\n  }\n}\n \nexport default Cell;","import React, { Component } from 'react';\nimport Cell from \"./Cell.js\";\nimport \"./Board.css\";\nimport { NanoBus } from '../App.js';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: [],\n      focus: undefined,\n    }\n  }\n\n  componentDidMount(){\n    this.fetchGameBoard();\n  }\n\n  componentDidUpdate(prevProps){\n    if( prevProps.level !== this.props.level ){\n      this.fetchGameBoard();\n      NanoBus.emit(\"board-reset\");\n      this.setState({ focus: undefined });\n    }\n  }\n\n  updateFocus = (cellID) => {\n    this.setState({ focus: cellID });\n  }\n\n  fetchGameBoard = () => {\n    let gameURL = \"https://sugoku.herokuapp.com/board?difficulty=\" + this.props.level;\n    fetch(gameURL)\n      .then((res) => res.json())\n      .then((gameboard) => {\n        let boardData = gameboard.board;\n        let updatedGameboard = boardData.map((row, rowIndex) => {\n          return row.map((cellValue, colIndex) => {\n            return { row: rowIndex, col: colIndex, value: cellValue, locked: cellValue !== 0, notes: new Set()}\n          });\n        });\n        this.setState({ board: updatedGameboard });\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  }\n\n  handleCellChange = (rowIndex, colIndex, newValue) => {\n    let currentBoard = this.state.board;\n    let selectedRow = currentBoard[rowIndex];\n    let currentCellData = selectedRow[colIndex];\n    let updatedValue = 0;\n    if( currentCellData[\"value\"] === 0 ){\n      updatedValue = newValue;\n    } else {\n      updatedValue = newValue.toString().slice(-1);\n    }\n\n    NanoBus.emit(\"cell-click\", {\n      value: updatedValue,\n      row: rowIndex,\n      col: colIndex\n    });\n\n    let updatedCellData = {...currentCellData, value: updatedValue };\n    selectedRow[colIndex] = updatedCellData\n    currentBoard[rowIndex] = selectedRow;\n    this.setState({ board: currentBoard });\n  }\n\n  handleNoteChange = (rowIndex, colIndex, newValue ) => {\n    let currentBoard = this.state.board;\n    let selectedRow = currentBoard[rowIndex];\n    let currentCellData = selectedRow[colIndex];\n    let currentNoteData = currentCellData[\"notes\"];\n    if( currentNoteData.has(newValue.toString()) ){\n      currentNoteData.delete(newValue.toString())\n    } else {\n      currentNoteData.add(newValue.toString());\n    }\n\n    currentCellData[\"notes\"] = currentNoteData;\n    selectedRow[colIndex] = currentCellData;\n    currentBoard[rowIndex] = selectedRow;\n    this.setState({ board: currentBoard });\n  }\n\n  render() { \n\n    const loadGrid = () => {\n      let gridItems = this.state.board.map((row, rowIdx) => {\n        let cellItems = row.map((cellData) => {\n          const { row, col, value, locked, notes } = cellData;\n          return <Cell \n                    notes={notes}\n                    rowIndex={row}\n                    colIndex={col}\n                    locked={locked}\n                    value={value} \n                    key={\"cell-\" + row + \"-\" + col} \n                    id={\"cell-\" + row + \"-\" + col} \n                    focus={this.state.focus}\n                    onCellClick={this.updateFocus}\n                    handleCellChange={this.handleCellChange} \n                    handleNoteChange={this.handleNoteChange}\n                    editNotesMode={this.props.editNotesMode}\n                    showAllNotes={this.props.showAllNotes}\n                    />\n        });\n        return <div className=\"Board-row\" key={\"row-\" + rowIdx}>{cellItems}</div>\n      });\n      return <div className=\"Board-container\">{gridItems}</div>\n    }\n    let gridBoard = loadGrid();\n    return (\n      <>\n        <div className=\"Board-grid\">{gridBoard}</div>\n      </>\n    );\n  }\n}\n \nexport default Board;","import React, { Component } from 'react'\nimport \"./DifficultySelector.css\";\n\nclass DifficultySelector extends Component {\n  \n  render() { \n    return (\n      <div className=\"DifficultySelector-container\">\n        <p className=\"DifficultySelector-title\">Select Game Difficulty: </p>\n        <select onChange={this.props.handleChange}>\n          <option value={\"easy\"}>Easy</option>\n          <option value={\"medium\"}>Medium</option>\n          <option value={\"hard\"}>Hard</option>\n        </select>\n      </div>\n    );\n  }\n}\n \nexport default DifficultySelector;","import React, { Component } from 'react';\nimport Switch from 'react-switch';\nimport \"./Switch.css\";\n\nclass EditNotesSwitch extends Component {\n\n  render() { \n    return (\n      <label className=\"Switch-row\">\n        <span className=\"Switch-text\">Edit Cell Notes:</span>\n        <Switch onChange={this.props.handleChange} checked={this.props.checked} />\n      </label>\n    );\n  }\n}\n \nexport default EditNotesSwitch;","import React, { Component } from 'react';\nimport './ProgressBar.css'\n\nclass ProgressBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n  render() { \n    return (\n      <div className=\"ProgressBar-container\">\n        <div className=\"ProgressBar-item\">1</div>\n        <div className=\"ProgressBar-item\">2</div>\n        <div className=\"ProgressBar-item\">3</div>\n        <div className=\"ProgressBar-item\">4</div>\n        <div className=\"ProgressBar-item\">5</div>\n        <div className=\"ProgressBar-item\">6</div>\n        <div className=\"ProgressBar-item\">7</div>\n        <div className=\"ProgressBar-item\">8</div>\n        <div className=\"ProgressBar-item\">9</div>\n      </div>\n    );\n  }\n}\n \nexport default ProgressBar;","import './App.css';\nimport Board from './components/Board';\nimport DifficultySelector from './components/DifficultySelector';\nimport EditNotesSwitch from './components/EditNotesSwitch.js';\nimport React, { Component } from 'react';\nimport nanobus from 'nanobus';\nimport ProgressBar from './components/ProgressBar.js';\n\nexport const NanoBus = nanobus();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state ={\n      level: \"easy\",\n      selectedCell: undefined,\n      editNotesMode: false,\n    };\n  }\n\n  componentDidMount(){\n\n    document.addEventListener(\"keydown\", (e) => {\n      if(e.key === \"Shift\"){\n        this.setState({ editNotesMode: !this.state.editNotesMode });\n      }\n    })\n\n    NanoBus.on(\"cell-click\", data => {\n      this.setState({ selectedCell: data });\n    });\n  }\n\n  handleDifficultyChange = (e) => {\n    this.setState({ level: e.target.value });\n  }\n\n  handleEditNotes = () => {\n    this.setState({ editNotesMode: !this.state.editNotesMode });\n  }\n\n  render() { \n    return (\n      <div className=\"App-container\">\n        <h1 className=\"App-title\">Sudoku Board</h1>\n        <div className=\"App-button-row\">\n          <DifficultySelector handleChange={this.handleDifficultyChange} />\n          <EditNotesSwitch checked={this.state.editNotesMode} handleChange={this.handleEditNotes} />\n        </div>\n        <Board level={this.state.level} editNotesMode={this.state.editNotesMode} />\n        <ProgressBar />\n      </div>\n    );\n  }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}